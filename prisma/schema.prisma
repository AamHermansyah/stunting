generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Article {
  id         Int      @id @default(autoincrement())
  title      String
  summary    String
  category   String
  tags       String
  content    String   @db.Text
  image      String   @db.Text
  alt_image  String
  created_at DateTime @default(now())
  author     User     @relation(fields: [authorId], references: [id])
  authorId   String

  @@index([authorId])
}

model User {
  id               String    @id @default(cuid())
  name             String
  email            String    @unique
  emailVerified    DateTime?
  image            String?
  password         String
  dateOfBirth      DateTime
  numberOfChildren Int
  district         String
  address          String
  role             Role      @default(USER)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  Article          Article[]
  Account          Account[]
}

enum Role {
  USER
  ADMIN
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model VerificationToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}
